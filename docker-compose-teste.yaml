services:
  api01: &api
    image: geovannigava/rinhav2:v5
    hostname: api01
    environment:
      NODE_ENV: production
      DB_HOST: db
      PORT: 3000
    ports:
      - '3001:3000'
    depends_on:
      - db
#        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '142MB'

  api02:
    <<: *api
    hostname: api02
    environment:
      NODE_ENV: production
      DB_HOST: db
      PORT: 3000
    ports:
      - '3002:3000'

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - '9999:9999'
    deploy:
      resources:
        limits:
          cpus: '0.17'
          memory: '10MB'

  db:
    image: postgres:latest
    restart: always
    hostname: db
    environment:
      - POSTGRES_DB=rinhav2
      - POSTGRES_USER=rinhav2
      - POSTGRES_PASSWORD=rinhav2
    # expose:
    #   - 5432
    ports:
      - '5432:5432'
#    volumes:
#      - ./resources/createfunction.sql:/docker-entrypoint-initdb.d/init.sql
    #command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096
    command: 'postgres -c max_connections=1000 -c shared_buffers=128MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off'

#    healthcheck:
#      test: ['CMD', 'pg_isready']
#      interval: 10s
#      timeout: 5s
#      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '256MB'

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1


#services:
#  postgres:
#    image: postgres:latest
#    command: 'postgres -c max_connections=1000 -c shared_buffers=128MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
#    environment:
#      POSTGRES_DB: rinhav2
#      POSTGRES_USER: rinhav2
#      POSTGRES_PASSWORD: rinhav2
#    ports:
#      - "5432:5432"